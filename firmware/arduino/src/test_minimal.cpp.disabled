// Minimal test firmware to verify ESP32 boots
// Comment out main.cpp temporarily and use this

#include <Arduino.h>
#include <Adafruit_NeoPixel.h>

// Neopixel on pin 33 for ESP32-S2
#define NEOPIXEL_PIN 33
#define NEOPIXEL_POWER 21

Adafruit_NeoPixel pixel(1, NEOPIXEL_PIN, NEO_GRB + NEO_KHZ800);

void setup() {
  // Initialize serial first
  Serial.begin(115200);
  
  // Power on neopixel if needed
  #ifdef NEOPIXEL_POWER
  pinMode(NEOPIXEL_POWER, OUTPUT);
  digitalWrite(NEOPIXEL_POWER, HIGH);
  delay(10);
  #endif
  
  // Initialize neopixel
  pixel.begin();
  pixel.setBrightness(20);
  
  // Blink pattern to show we're alive
  for(int i = 0; i < 5; i++) {
    // Red
    pixel.setPixelColor(0, pixel.Color(255, 0, 0));
    pixel.show();
    Serial.println("RED");
    Serial.flush();
    delay(200);
    
    // Green  
    pixel.setPixelColor(0, pixel.Color(0, 255, 0));
    pixel.show();
    Serial.println("GREEN");
    Serial.flush();
    delay(200);
    
    // Blue
    pixel.setPixelColor(0, pixel.Color(0, 0, 255));
    pixel.show();
    Serial.println("BLUE");
    Serial.flush();
    delay(200);
  }
  
  Serial.println("=== MINIMAL TEST SUCCESSFUL ===");
  Serial.println("ESP32 is booting correctly!");
  Serial.println("Now testing with actual firmware...");
  Serial.flush();
  
  // Leave pixel green to show success
  pixel.setPixelColor(0, pixel.Color(0, 255, 0));
  pixel.show();
}

void loop() {
  static uint32_t last_print = 0;
  
  if (millis() - last_print > 1000) {
    last_print = millis();
    Serial.print("Alive: ");
    Serial.println(millis());
    Serial.flush();
    
    // Pulse neopixel
    static bool on = false;
    if (on) {
      pixel.setPixelColor(0, pixel.Color(0, 50, 0));
    } else {
      pixel.setPixelColor(0, pixel.Color(0, 10, 0));
    }
    pixel.show();
    on = !on;
  }
}